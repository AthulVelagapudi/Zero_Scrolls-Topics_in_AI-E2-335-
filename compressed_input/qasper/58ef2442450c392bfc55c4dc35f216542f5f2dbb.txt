<|begin_of_text|><|start_header_id|>system<|end_header_id|>

You are a helpful assistant. Always follow the task instruction carefully. The first paragraph before the first double line break contains the task instruction. Generate text as a natural continuation of the user message. Do not include any meta-commentary or explanations.<|eot_id|>
<|start_header_id|>user<|end_header_id|>

You are given a scientific article and a question. Answer the question as concisely as you can, using a single phrase or sentence if possible. If the question cannot be answered based on the information in the article, write "unanswerable". If the question is a yes/no question, answer "yes", "no", or "unanswerable".

Article:
Introduction  The rapid in speech and small screen interfaces, particularly has significantly influenced the way users interact with intelligent systems to satisfy their information needs.  The growing interest in personal digital assistants, such as Amazon Alexa, Apple Siri, Google Assistant, and Microsoft Cortana, demonstrates the willingness of users to employ conversational interactions BIBREF0.As a result, conversational information seeking (CIS) has been recognized as a major emerging research area in the Third Strategic Workshop on Information Retrieval (SWIRL 2018)  BIBREF1.  Research progress in CIS relies on the availability of resources to the community.There have been recent efforts on providing data for various CIS tasks, such as the TREC 2019 Conversational Assistance Track (CAsT), MISC BIBREF2, Qulac BIBREF3, CoQA BIBREF4, QuAC BIBREF5, SCS BIBREF6, and CCPE-M BIBREF7.  In addition, BIBREF8 have implemented a demonstration for conversational movie recommendation based on Google's DialogFlow.  Despite all of these resources, the community still feels the lack of a suitable platform for developing CIS systems.  We believe that providing such platform will speed up the progress in conversational information seeking research.Therefore, we developed a general framework for supporting CIS research.  The framework is called Macaw.  This paper describes the high-level architecture of Macaw, the supported functionality, and our future vision.  Researchers working on various CIS tasks should be able to take advantage of Macaw in their projects.Macaw is designed on a architecture support different information, including,ational,ationalational language interface to structured.  Each interaction inaw (from both is a Message, thus a  aw of multiple a that can satisfy information users for some requests.For example, search and question answering can be two actions in Macaw.  Even multiple search algorithms can be also seen as multiple actions.  Each action can produce multiple outputs (e.g., multiple retrieved documents).  For every user interaction, Macaw runs all actions in parallel.The actions' outputs produced a (., an interaction timeout are then.  Macaw can choose one or combine multiple of these outputs and prepare an output Message object as the user's response.  The modular design of Macaw makes it relatively easy to configure a different user interface or add a new one.The current of Macaw a interface as mobile web.  Inaw's be a, which supports a of and systems (see FIGREF   to support-al as,,,,  A of APIs for and generation been support speech interactions.Note that the Macaw's architecture and implementation allows mixed-initiative interactions.  The research community can benefit from Macaw for the following purposes:[leftmargin=*]  Developing algorithms, tools, and techniques for CIS.Studying user interactions with CIS systems.  Performing CIS studies based on an intermediary person and wizard of oz.Preparing quick demonstration for a developed CIS model.  Macaw ArchitectureMacaw has a modular design, with the goal of making it easy to configure and add new modules such as a different user interface or different retrieval module.  The overall setup also follows a Model-View-Controller (MVC) like architecture.  The design decisions have been made to smooth the Macaw's adoptions and extensions.  Macaw is implemented in Python, thus machine learning models implemented using PyTorch, Scikit-learn, or TensorFlow can be easily integrated into Macaw.The-level of Macaw is in FIGREF.The user the interface the interface a Message object from the current interaction of user.  The interaction can be in multi-modal form, such as text, speech, image, and click.  Macaw stores all interactions in an “Interaction Database”.For every, Macaw for most recent user-system interactions ( the's to a of, the conversation.It then to multiple information seeking (and) actions each should respond aThe output selection selects fromor by and a Message object as the system's response.This message is logged into the interaction database and is sent to the interface to be presented to the user.  Again, the response message can be multi-modal and include text, speech, link, list of options, etc.  Macaw also supports Wizard of Oz studies or intermediary-based information seeking studies.The of Macaw for such is in FIGREF. the seeker a realational that supportsal and interactions in multipleThe intermediary the) the's performs different information actions with  All seeker-intermediary and intermediary-system interactions will be logged for further analysis.This setup can simulate an ideal CIS system and thus is useful for collecting high-quality data from real users for CIS research.  Retrieval and Question  Answering in MacawThe overview of retrieval and question answering actions in Macaw is shown in FIGREF17.  These actions consist of the following components:[leftmargin=*]  Co-Reference Resolution:  To support multi-turn interactions, it is sometimes necessary to use co-reference resolution techniques for effective retrieval.In Macaw, we identify all the co-references from the last request of user to the conversation history.  The same co-reference resolution outputs can be used for different query generation components.  This can be a generic or action-specific component.Query Generation:  This component generates a query based on the past user-system interactions.  The query generation component may take advantage of co-reference resolution for query expansion or re-writing.Retrieval Model:  This is the core ranking component that retrieves documents or passages from a large collection.  Macaw can retrieve documents from an arbitrary document collection using the Indri python interface BIBREF9, BIBREF10.  We also provide the support for web search using the Bing Web Search API.Macaw also allows multi-stage document re-ranking.  Result Generation:  The retrieved documents can be too long to be presented using some interfaces.Result generation is basically a post-processing step ran on the retrieved result list.  In case of question answering, it can employ answer selection or generation techniques, such as machine reading comprehension models.  For example, Macaw features the DrQA model BIBREF11 for question answering.These components are implemented in a generic form, so researchers can easily replace them with their own favorite algorithms.  User Interfaces We have implemented the following interfaces for Macaw:[leftmargin=*]  File IO:This interface is designed for experimental purposes, such as evaluating the performance of a conversational search technique on a dataset with multiple queries.  This is not an interactive interface.  Standard IO:This interactive command line interface is designed for development purposes to interact with the system, see the logs, and debug or improve the system.  Telegram: This interactive interface is designed for interaction with real users (see FIGREF4).  Telegram is a popular instant messaging service whose client-side code is open-source.We have a used with different devices ( and different,,).  This allows-al interactions (,,, image   be used for-  For speech recognition and, Macaw on online APIs,., the Cloud Azure. there multiple popular groups and channels in Telegram, which allows further integration of social networks with conversational systems.  For example, see the Naseri and Zamani's study on news popularity in Telegram BIBREF12.  Similar to the other modules, one can easily extend Macaw using other appropriate user interfaces.Limitations and Future Work  The current implementation of Macaw lacks the following actions.We intend to incrementally improve Macaw by supporting more actions and even more advanced techniques for the developed actions.  [leftmargin=*]Clarification and Preference  Elicitation:  Asking clarifying questions has been recently recognized as a necessary component in a conversational system BIBREF3, BIBREF7.  The authors are not aware of a published solution for generating clarifying questions using public resources.Therefore, Macaw does not currently support clarification.  Explanation: Despite its importance, result list explanation is also a relatively less explored topic.  We intend to extend Macaw with result list explanation as soon as we find a stable and mature solution.:  In our first we onational and answeringWe to provide support for conversational recommendation, e.g., BIBREF13, BIBREF14, BIBREF15, and joint search and recommendation, e.g., BIBREF16, BIBREF17, in the future.Natural Language Interface:  Macaw can potentially support access to structured data, such as knowledge graph.  We would like to ease conversational natural language interface to structured and semi-structured data in our future releases.Contribution Macaw is distributed under the MIT License.  We welcome contributions and suggestions.Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution.  For details, visit https://cla.opensource.microsoft.com.  This project has adopted the Microsoft Open Source Code of Conduct.When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment).  Simply follow the instructions provided by the bot.  You will only need to do this once across all repos using our CLA.Conclusions This paper described Macaw, an open-source platform for conversational information seeking research.  Macaw supports multi-turn, multi-modal, and mixed-initiative interactions.  It was designed based on a modular architecture that allows further improvements and extensions.Researchers can benefit from Macaw for developing algorithms and techniques for conversational information seeking research, for user studies with different interfaces, for data collection from real users, and for preparing a demonstration of a CIS model.  AcknowledgementsThe authors wish to thank Ahmed Hassan Awadallah, Krisztian Balog, and Arjen P.  de Vries for their invaluable feedback.... [The rest of the article is omitted]

Question:
Does the paper provide any case studies to illustrate how one can use Macaw for CIS research?

Answer:
<|eot_id|>
<|start_header_id|>assistant<|end_header_id|>

